{"version":3,"sources":["components/Error.jsx","components/Formulario.jsx","components/Imagen.jsx","components/ListaImagenes.jsx","components/Spinner/Spinner.jsx","App.js","serviceWorker.js","index.js"],"names":["Error","msg","className","Formulario","setBusqueda","useState","termino","setTermino","error","setError","onSubmit","e","preventDefault","trim","replace","type","placeholder","onChange","target","value","Imagen","imagen","largeImageURL","likes","tags","user","previewURL","src","alt","href","rel","ListaImagenes","imagenes","map","key","id","Spinner","App","busqueda","setImagenes","paginaActual","setPaginaActual","totalPaginas","setTotalPaginas","cargando","setCargando","useEffect","consultarAPI","a","perPage","url","fetch","respuesta","json","resultado","hits","Math","ceil","totalHits","setTimeout","length","onClick","nuevaActual","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.5517ab48.chunk.js","sourcesContent":["import React from 'react'\n\nconst Error = ({msg}) => {\n\treturn (\n\t\t<div className='alert alert-danger text-center'>\n\t\t\t{ msg }\n\t\t</div>\n\t)\n}\n\nexport default Error\n","import React, { useState } from 'react'\nimport Error from './Error'\n\nconst Formulario = ({ setBusqueda }) => {\n\tconst [termino, setTermino] = useState('')\n\tconst [error, setError] = useState(false)\n\n\tconst buscarTermino = (e) => {\n\t\te.preventDefault()\n\t\t// validar termino\n\t\tif (termino.trim() === '') {\n\t\t\tsetError(true)\n\t\t\treturn\n\t\t}\n\t\tsetError(false)\n\t\t// Enviar termino a componente principal\n\t\tsetBusqueda(termino.replace(' ', '+'))\n\t}\n\n\treturn (\n\t\t<form onSubmit={buscarTermino}>\n\t\t\t<div className='row'>\n\t\t\t\t<div className='col-12'>\n\t\t\t\t\t{error ? <Error msg='Ingresa un termino para buscar' /> : null}\n\t\t\t\t</div>\n\t\t\t\t<div className='form-group col-12 col-sm-8 col-md-8 col-lg-8'>\n\t\t\t\t\t<label>Palabra a buscar:</label>\n          <input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\tplaceholder='Ej: gatos'\n\t\t\t\t\t\tonChange={(e) => setTermino(e.target.value)}\n          />\n          <small className=\"form-text text-muted\">Puedes escribir en español o ingles.</small>\n\t\t\t\t</div>\n\t\t\t\t<div className='form-group col-12 col-sm-4 col-md-4 col-lg-4 d-flex align-items-center'>\n\t\t\t\t\t<button type='submit' className='btn btn-primary btn-block'>\n\t\t\t\t\t\tBuscar\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nexport default Formulario\n","import React from 'react'\n\nconst Imagen = ({ imagen }) => {\n\tconst { largeImageURL, likes, tags, type, user, previewURL } = imagen\n\treturn (\n\t\t<div className='card'>\n\t\t\t<img src={previewURL} className='card-img-top img-fluid' alt={tags} />\n\t\t\t<ul className='list-group list-group-flush'>\n\t\t\t\t<li className='list-group-item'>\n\t\t\t\t\t<small>\n\t\t\t\t\t\t<b>Etiquetas: </b>\n\t\t\t\t\t\t{tags}\n\t\t\t\t\t</small>\n\t\t\t\t</li>\n\t\t\t\t<li className='list-group-item'>\n\t\t\t\t\t<small>\n\t\t\t\t\t\t<b>Tipo: </b>\n\t\t\t\t\t\t{type}\n\t\t\t\t\t</small>\n\t\t\t\t</li>\n\t\t\t\t<li className='list-group-item'>\n\t\t\t\t\t<small>\n\t\t\t\t\t\t<b>Autor: </b>\n\t\t\t\t\t\t{user}\n\t\t\t\t\t</small>\n\t\t\t\t</li>\n\t\t\t\t<li className='list-group-item'>\n\t\t\t\t\t<small>\n\t\t\t\t\t\t<b>Likes: </b>\n\t\t\t\t\t\t{likes}\n\t\t\t\t\t</small>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<div className='card-body'>\n\t\t\t\t<a\n\t\t\t\t\thref={largeImageURL}\n          target='_blank'\n          rel=\"noopener noreferrer\"\n\t\t\t\t\tclassName='btn btn-link btn-block'\n\t\t\t\t>\n\t\t\t\t\tVer en tamaño completo\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Imagen\n","import React from 'react';\nimport Imagen from './Imagen'\n\nconst ListaImagenes = ({imagenes}) => {\n  return (\n    <div className=\"card-columns col-12\">\n      {imagenes.map(imagen => (\n        <Imagen key={imagen.id} imagen={imagen}/>\n      ))}\n    </div>\n  );\n};\n\nexport default ListaImagenes;","import React from 'react';\nimport './Spinner.css'\n\nconst Spinner = () => {\n  return (\n    <div className=\"sk-cube-grid\">\n      <div className=\"sk-cube sk-cube1\"></div>\n      <div className=\"sk-cube sk-cube2\"></div>\n      <div className=\"sk-cube sk-cube3\"></div>\n      <div className=\"sk-cube sk-cube4\"></div>\n      <div className=\"sk-cube sk-cube5\"></div>\n      <div className=\"sk-cube sk-cube6\"></div>\n      <div className=\"sk-cube sk-cube7\"></div>\n      <div className=\"sk-cube sk-cube8\"></div>\n      <div className=\"sk-cube sk-cube9\"></div>\n    </div>\n  );\n};\n\nexport default Spinner;","import React, { useState, useEffect } from 'react'\nimport Formulario from './components/Formulario'\nimport ListaImagenes from './components/ListaImagenes'\nimport Spinner from './components/Spinner/Spinner'\n\nfunction App() {\n\tconst [busqueda, setBusqueda] = useState('')\n\tconst [imagenes, setImagenes] = useState([])\n\tconst [paginaActual, setPaginaActual] = useState(1)\n\tconst [totalPaginas, setTotalPaginas] = useState(1)\n\tconst [cargando, setCargando] = useState(false)\n\n\tuseEffect(() => {\n\t\tif (busqueda === '') return\n\t\tsetImagenes([])\n\t\tsetCargando(true)\n\t\tconst consultarAPI = async () => {\n\t\t\tconst ll = '17102576-721f7fd7bd4bac153e82eddfa'\n\t\t\tconst perPage = 12\n\t\t\tconst url = `https://pixabay.com/api/?key=${ll}&q=${busqueda}&per_page=${perPage}&page=${paginaActual}`\n\t\t\tconst respuesta = await fetch(url)\n\t\t\tconst resultado = await respuesta.json()\n\t\t\tsetImagenes(resultado.hits)\n\t\t\t// calcular el total de paginas a mostrar\n\t\t\tsetTotalPaginas(Math.ceil(resultado.totalHits / perPage))\n\t\t\tsetCargando(false)\n\t\t}\n\t\tsetTimeout(() => {\n\t\t\tconsultarAPI()\n\t\t}, 500)\n\t}, [busqueda, paginaActual])\n\n\tconst irAnterior = () => {\n\t\tsetImagenes([])\n\t\tconst nuevaActual = paginaActual - 1\n\t\tif (nuevaActual === 0) return\n\t\tsetPaginaActual(nuevaActual)\n\t}\n\tconst irSiguiente = () => {\n\t\tsetImagenes([])\n\t\tconst nuevaActual = paginaActual + 1\n\t\tif (nuevaActual > totalPaginas) return\n\t\tsetPaginaActual(nuevaActual)\n\t}\n\n\treturn (\n\t\t<div className='container'>\n\t\t\t<div className='jumbotron'>\n\t\t\t\t<p className='lead text-center'>\n\t\t\t\t\t<b>Banco de imagenes con Pixabay API</b>\n\t\t\t\t</p>\n\t\t\t\t<Formulario setBusqueda={setBusqueda} />\n\t\t\t</div>\n\t\t\t{cargando ? <Spinner /> : null}\n\t\t\t{imagenes.length === 0 ? null : (\n\t\t\t\t<div className='row'>\n\t\t\t\t\t<div className='col-12'>\n\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\tPagína {paginaActual} de {totalPaginas}{' '}\n\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t<hr />\n\t\t\t\t\t</div>\n\t\t\t\t\t<ListaImagenes imagenes={imagenes} />\n\t\t\t\t\t<div className='col-12 d-flex flex-column flex-md-row justify-content-md-around'>\n\t\t\t\t\t\t{paginaActual === 1 ? null : (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\tclassName='btn btn-secondary my-2'\n\t\t\t\t\t\t\t\tonClick={irAnterior}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t&laquo; Anterior\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{paginaActual === totalPaginas ? null : (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\tclassName='btn btn-secondary my-2'\n\t\t\t\t\t\t\t\tonClick={irSiguiente}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSiguiente &raquo;\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}